# Default values for vantage-kubernetes-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: "quay.io/vantage-sh/kubernetes-agent"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

agent:
  debug: false
  # logLevel corresponds to https://pkg.go.dev/log/slog#Level
  # Info: 0
  # Debug: -4
  logLevel: "0"
  # Unique identifier for your cluster.
  clusterID: ""
  # Vantage API Token
  token: ""
  # If the Secret is pre-provisioned, can override the secret name and key as needed below. If name is not set a Secret using `token` is provisioned.
  secret:
    name: ""
    key: "token"
  # Comma separated list of node address types to use in priority order when looking up node addresses.
  # Default value works for most clusters but can be tuned if getting node hostname lookup errors.
  # eg: "Hostname,InternalDNS,InternalIP,ExternalDNS,ExternalIP"
  nodeAddressTypes: ""

  # Comma separated list of allowed annotations to be sent to Vantage. Max 10 annotations. Note that values are truncated after 100 chars.
  allowedAnnotations: ""

persist:
  mountPath: "/var/lib/vantage-agent"
  name: "data"
  size: "10Gi"

service:
  name: report
  type: ClusterIP
  port: 9010

# These limits are set low to support small clusters (<=20nodes) and should be considered minimum values for deploying an agent.
# Estimates for larger clusters are roughly:
# ~1CPU/1000node
# ~2MB/node
# These are estimates and will vary based on node density, label usage, cluster activity, etc.
# Agent should reach an approximate steady state after ~1hour of consistent uptime and can be tuned accordingly.
resources:
  limits:
    cpu: 100m
    memory: 50Mi
  requests:
    cpu: 100m
    memory: 50Mi


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

clusterRole:
  annotations: {}
clusterRoleBinding:
  annotations: {}

podAnnotations: {}
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
